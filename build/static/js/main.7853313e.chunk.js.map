{"version":3,"sources":["reportWebVitals.js","img/logo.svg","components/reprintModule/reprintModule.js","components/dischargeModule/dischargeModule.js","App.js","index.js","components/services/baseService.js","components/services/reprintService.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","flexGrow","borderRadius","appbar","background","paddingTop","paddingBottom","marginBottom","color","navbarTitle","textAlign","fontStyle","title","fontSize","pos","divider","marginTop","formControl","width","selectEmpty","spacing","button","margin","textTransform","backgroundColor","buttonOutlined","alignItems","backdrop","zIndex","drawer","buttonProgress","red","position","top","left","display","Accordion","withStyles","boxShadow","borderBottom","expanded","MuiAccordion","AccordionSummary","minHeight","content","MuiAccordionSummary","AccordionDetails","padding","MuiAccordionDetails","CenteredGrid","useParams","operationId","option","documentType","documentNumber","businessName","contactModeCode","productCode","causeCode","reasonCode","companyCode","responsibleSector","registerSector","user","origin","initContact","closeContact","productNumber","React","useState","embozos","setEmbozos","sucursales","setSucursales","alert","setAlert","disable","setDisable","value","setValue","setExpanded","selectedDestino","setSelectedDestino","selectedSucursal","setSelectedSucursal","tipo","setTipo","open","setOpen","resultRequest","setResultRequest","resultStatus","setResultStatus","resultMsg","setResultMsg","useTheme","fullScreen","useMediaQuery","breakpoints","down","loading","setLoading","handleClose","domicilioEmbozo","useRef","domicilioCategoria","sucursalEmbozo","sucursalCategoria","timer","useEffect","clearTimeout","current","classes","handleChange","panel","event","newExpanded","ReprintService","getBranchDetails","dataSucursales","branches","target","saveData","embozo","outerText","category","BaseService","data","pedido","registration","requestNumber","mensaje","message","estado","status","a","getAlert","dataAlert","callAPI","getCardDetails","getEmbozos","detalleTarjeta","reprint","dataEmbozos","className","AppBar","Container","maxWidth","Toolbar","IconButton","edge","menuButton","src","logo","alt","Typography","variant","Grid","container","item","lg","Card","CardContent","component","gutterBottom","Divider","square","aria-controls","id","FormControl","RadioGroup","aria-label","name","onChange","onClick","FormControlLabel","control","Radio","label","filter","destino","map","fEmbozo","ref","categoria","xs","Select","props","sucursal","MenuItem","numBranch","branch","Alert","severity","AlertTitle","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","size","startIcon","style","disabled","Backdrop","CircularProgress","window","print","require","App","to","path","Reprint","Discharge","ReactDOM","render","StrictMode","document","getElementById","URL","_call_get","url","fetch","res","json","catch","err","console","log","_call_post","body","method","headers","JSON","stringify","this","contactMode","reasoncode","domicilio","code","cardNumber"],"mappings":"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","file":"static/js/main.7853313e.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/logo.a1dd3a73.svg\";","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport logo from '../../img/logo.svg';\r\n\r\n// import css\r\nimport { makeStyles, withStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MuiAccordion from \"@material-ui/core/Accordion\";\r\nimport MuiAccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport MuiAccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\n// icons\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\n\r\n// services\r\nimport BaseService from '../services/baseService';\r\nimport ReprintService from '../services/reprintService';\r\n\r\n// start css\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  appbar: { background: 'white', paddingTop: 10, paddingBottom: 10, marginBottom: 25, color: 'black' },\r\n  navbarTitle: { flexGrow: 1, textAlign: 'right', fontStyle: 'uppercase' },\r\n  title: { fontSize: 14 },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25 },\r\n  formControl: { width: '95%' },\r\n  selectEmpty: { marginTop: theme.spacing(2) },\r\n  button: { margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', backgroundColor: '#DB0011',\r\n            borderRadius: '0' },\r\n  buttonOutlined: { margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', color: '#DB0011',\r\n  borderRadius: '0' },\r\n  alignItems: { textAlign: 'right' },\r\n\r\n  // loading styles\r\n  backdrop: { zIndex: theme.zIndex.drawer + 1, color: '#fff' },\r\n  buttonProgress: { color: red[500], position: 'absolute', top: '50%', left: '50%', margin: theme.spacing(1), \r\n                    display: 'flex', alignItems: 'center' }\r\n\r\n}));\r\n\r\nconst Accordion = withStyles({\r\n  root: {\r\n    boxShadow: \"none\",\r\n    \"&:not(:last-child)\": { borderBottom: 0 },\r\n    \"&:before\": { display: \"none\" },\r\n    \"&$expanded\": { margin: \"auto\" },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordion);\r\n\r\nconst AccordionSummary = withStyles({\r\n  root: {\r\n    marginBottom: -1, minHeight: 56,\r\n    \"&$expanded\": { minHeight: 56 },\r\n  },\r\n  content: {\r\n    \"&$expanded\": { margin: \"12px 0\" },\r\n  },\r\n  expanded: {},\r\n})(MuiAccordionSummary);\r\n\r\nconst AccordionDetails = withStyles((theme) => ({\r\n  root: { padding: theme.spacing(2) },\r\n}))(MuiAccordionDetails);\r\n// end css\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n    reasonCode, companyCode, responsibleSector, registerSector, user, origin,\r\n    initContact, closeContact, productNumber } = useParams();\r\n\r\n  // State variables\r\n  const [embozos, setEmbozos] = React.useState([]);\r\n  const [sucursales, setSucursales] = React.useState([]);\r\n  const [alert, setAlert] = React.useState('');\r\n  const [disable, setDisable] = React.useState(true);\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [expanded, setExpanded] = React.useState(\"\");\r\n  const [selectedDestino, setSelectedDestino] = React.useState('');\r\n  const [selectedSucursal, setSelectedSucursal] = React.useState('');\r\n  const [tipo, setTipo] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [resultRequest, setResultRequest] = React.useState(\"\");\r\n  const [resultStatus, setResultStatus] = React.useState(\"\");\r\n  const [resultMsg, setResultMsg] = React.useState(\"\");\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  const handleClose = () => { setOpen(false); };\r\n\r\n  // Ref variables\r\n  let domicilioEmbozo = React.useRef(null);\r\n  let domicilioCategoria = React.useRef(null);\r\n  let sucursalEmbozo = React.useRef(null);\r\n  let sucursalCategoria = React.useRef(null);\r\n  const timer = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timer.current);\r\n    };\r\n  }, []);\r\n\r\n  // Style variables\r\n  const classes = useStyles();\r\n\r\n  // Get branches info\r\n  const updateBranches = () => {\r\n    ReprintService.getBranchDetails(operationId)\r\n      .then(dataSucursales => {\r\n        setSucursales(dataSucursales.branches);\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  // Handle onchange event (Sucursal)\r\n  const updateSelectedSucursal = (event, data) => {\r\n    setSelectedSucursal(data.props.label + \" (\" + data.props.value + \")\");\r\n  }\r\n\r\n  // Handle onchange event (Paneles)\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    if (panel === 'panelSucursal') { // Panel de Sucursal\r\n      setLoading(true);\r\n      updateBranches();\r\n      setSelectedDestino('SUCURSAL');\r\n      setDisable(true);\r\n    } else { // Panel de Domicilio\r\n      setSelectedSucursal(\"-\");\r\n      setSelectedDestino('DOMICILIO');\r\n    }\r\n    setExpanded(newExpanded ? panel : false);\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  // Funcion para guardar la registracion generada\r\n  const saveData = () => {\r\n    let embozo = selectedDestino === 'DOMICILIO' ? domicilioEmbozo.current.outerText : sucursalEmbozo.current.outerText;\r\n    let category = selectedDestino === 'DOMICILIO' ? domicilioCategoria.current.outerText : sucursalCategoria.current.outerText;\r\n\r\n    setDisable(true);\r\n    setLoading(true);\r\n\r\n    BaseService.saveData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n      user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact, embozo,\r\n      category, \"-\", selectedSucursal)\r\n      .then(data => {\r\n        // TODO: Abrir un dialogo de informacion al usuario con el resultado\r\n        let pedido = data.registration.requestNumber;\r\n        let mensaje = data.registration.message;\r\n        let estado = data.registration.status;\r\n        setOpen(true);\r\n        setResultRequest(pedido);\r\n        setResultStatus(estado);\r\n        setResultMsg(mensaje);\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  // Funcion hook para consultar la ayuda al operador\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      BaseService.getAlert(operationId, productCode, causeCode, reasonCode, companyCode)\r\n        .then(dataAlert => {\r\n          setAlert(dataAlert.message);\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, productCode, causeCode, reasonCode, companyCode]);\r\n\r\n  // Funcion hook para consultar los detalles de la tarjeta y los embozos\r\n  React.useEffect(() => {\r\n    async function callAPI() {\r\n      ReprintService.getCardDetails(operationId, productNumber)\r\n        .then(data => {\r\n          ReprintService.getEmbozos(operationId, data.detalleTarjeta.reprint)\r\n            .then(dataEmbozos => {\r\n              setEmbozos(dataEmbozos.embozos);\r\n              setLoading(false);\r\n            });\r\n        })\r\n    }\r\n    callAPI();\r\n  }, [operationId, productNumber]);\r\n\r\n  // Funcion hook para configurar el nombre de la transaccional de \r\n  // acuerdo al valor del parametro option recibido\r\n  React.useEffect(() => {\r\n    if (option === 'ReimprimirDiferida') {\r\n      setTipo(\"Reimpresión Diferida de Tarjeta Banelco\");\r\n    } else {\r\n      setTipo(\"Reimpresión Común de Tarjeta Banelco\");\r\n    }\r\n  }, [option]);\r\n\r\n  const printScreen = () => {\r\n    window.print();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* start navbar */}\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.appbar}>\r\n          <Container maxWidth=\"lg\">\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" className={classes.navbarTitle}>\r\n                {tipo}\r\n              </Typography>\r\n            </Toolbar>\r\n          </Container>\r\n        </AppBar>\r\n      </div>\r\n      {/* end navbar */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={12}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Perfil\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={3}>\r\n                  <Grid item lg={5}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo y Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType} - {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item lg={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Destino\r\n                </Typography>\r\n                <br></br>\r\n                <div>\r\n                  <Accordion square expanded={expanded === \"panelDomicilio\"} key='acc-domicilio'>\r\n                    <AccordionSummary aria-controls=\"panelDomiciliod-content\" id=\"panelDomiciliod-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"domicilio\" value={value} onChange={handleChange(\"panelDomicilio\")} onClick={() => setDisable(false)}>\r\n                          <FormControlLabel value=\"panelDomicilio\" control={<Radio />} label=\"Domicilio\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Domicilio\r\n                          </Typography>\r\n                          <Typography className={classes.pos} color=\"textSecondary\">\r\n\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                              <Typography key=\"domicilioEmbozo\" ref={domicilioEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Domicilio').map(fEmbozo => (\r\n                              <Typography key=\"domicilioCategoria\" ref={domicilioCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                  <Accordion square expanded={expanded === \"panelSucursal\"} key='acc-sucursal'>\r\n                    <AccordionSummary aria-controls=\"panelSucursald-content\" id=\"panelSucursald-header\">\r\n                      <FormControl component=\"fieldset\">\r\n                        <RadioGroup aria-label=\"destino\" name=\"sucursal\" value={value} onChange={handleChange(\"panelSucursal\")}>\r\n                          <FormControlLabel value=\"panelSucursal\" control={<Radio />} label=\"Sucursal\" />\r\n                        </RadioGroup>\r\n                      </FormControl>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Grid container spacing={3}>\r\n                        <Grid item lg={2} xs={6}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Sucursal\r\n                            </Typography>\r\n                          <FormControl className={classes.formControl}>\r\n                            <Select onChange={updateSelectedSucursal}>\r\n                              {sucursales.map((sucursal) =>\r\n                                <MenuItem onClick={() => setDisable(false)} value={sucursal.numBranch} label={sucursal.branch}>{sucursal.branch}</MenuItem>)}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Embozo\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Sucursal').map(fEmbozo => (\r\n                              <Typography key=\"sucursalEmbozo\" ref={sucursalEmbozo} className={classes.pos} color=\"textSecondary\">{fEmbozo.embozo}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                        <Grid item lg={2}>\r\n                          <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                            Categoría\r\n                          </Typography>\r\n                          {\r\n                            embozos.filter(embozo => embozo.destino === 'Sucursal').map(fEmbozo => (\r\n                              <Typography key=\"sucursalCategoria\" ref={sucursalCategoria} className={classes.pos} color=\"textSecondary\">{fEmbozo.categoria}</Typography>))\r\n                          }\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </div>\r\n                <br></br>\r\n\r\n                <Alert severity=\"info\">\r\n                  <AlertTitle><strong>Tener en cuenta</strong></AlertTitle>\r\n                  {alert}\r\n                </Alert>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog fullScreen={fullScreen} open={open} onClose={handleClose} aria-labelledby=\"responsive-dialog-title\">\r\n          <DialogTitle id=\"responsive-dialog-title\">{\"REGISTRACIÓN\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <Typography gutterBottom>\r\n                Se ha generado el pedido: <strong>{resultRequest}</strong> con estado <u><strong>{resultStatus}</strong></u>\r\n              </Typography>\r\n              <Typography gutterBottom>\r\n                {resultMsg}\r\n              </Typography>\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={saveData} variant=\"outlined\" color=\"secondary\" size=\"large\" className={classes.buttonOutlined}\r\n                    startIcon={<AutorenewIcon />} style={{display: ( origin === 'SUCURSAL' && resultStatus !== 'Resuelto' ) ? 'inherit' : 'none'}}>Reintentar</Button>\r\n            <Button onClick={handleClose} variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                    startIcon={<CloseIcon />}>Cerrar</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.alignItems}>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button} disabled={disable}\r\n            startIcon={<SaveIcon />} onClick={saveData}>Guardar</Button>\r\n\r\n            {loading && <Backdrop className={classes.backdrop} open={loading}>\r\n                          <CircularProgress size={40} className={classes.buttonProgress}/>\r\n                        </Backdrop>\r\n            }\r\n\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button} disabled={disable}\r\n            startIcon={<PrintIcon />} onClick={printScreen}>Imprimir</Button>\r\n          <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n            startIcon={<CloseIcon />}>Salir</Button>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport logo from '../../img/logo.svg';\r\n\r\n// css\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// material\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n// icons\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// services\r\nconst { ReprintService } = require('../services/reprintService');\r\nconst { BaseService } = require('../services/baseService')\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: { flexGrow: 1, borderRadius: 0 },\r\n  appbar: { background: 'white', paddingTop: 10, paddingBottom: 10, marginBottom: 25, color: 'black' },\r\n  navbarTitle: { flexGrow: 1, textAlign: 'right', fontStyle: 'uppercase' },\r\n  title: { fontSize: 14, },\r\n  pos: { marginBottom: 12, },\r\n  divider: { marginTop: 25, marginBottom: 25, },\r\n  formControl: { width: '95%', },\r\n  selectEmpty: { marginTop: theme.spacing(2) },\r\n  button: { margin: 10, marginTop: 25, marginBottom: 30, textTransform: 'capitalize', backgroundColor: '#DB0011',\r\n            borderRadius: '0' },\r\n  alignItems: { textAlign: 'right' }\r\n\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n\r\n  // Entry params\r\n  let { operationId, option, documentType, documentNumber, businessName, contactModeCode, productCode, causeCode,\r\n        reasonCode, companyCode, responsibleSector, registerSector, user, origin, \r\n        initContact, closeContact, productNumber } = useParams();\r\n\r\n  let service = new ReprintService();\r\n  let baseService = new BaseService();\r\n\r\n  const classes = useStyles();\r\n\r\n  const saveData = () => {\r\n    baseService.saveData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin, \r\n    user, option, contactModeCode, reasonCode, responsibleSector, registerSector, initContact, closeContact )\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* start navbar */}\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\" className={classes.appbar}>\r\n            <Container maxWidth=\"lg\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.navbarTitle}>\r\n                        Baja de Tarjeta Banelco\r\n                    </Typography>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n      </div>\r\n      {/* end navbar */}\r\n\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n              <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Cliente\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={5}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Apellido y Nombre\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {businessName}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentType}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº de Documento\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {documentNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Divider variant=\"middle\" className={classes.divider} />\r\n\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  Tarjeta\r\n                </Typography>\r\n                <br></br>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={5}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Nº Banelco\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      {productNumber}\r\n                    </Typography>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={2}>\r\n                    <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                      Tipo de Tarjeta\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                      P.TIT.ELECTRON\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <div className={classes.alignItems}>\r\n            <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button} \r\n                    startIcon={<SaveIcon />}>Guardar</Button>\r\n            <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button} \r\n                    startIcon={<PrintIcon />}>Imprimir</Button>\r\n            <Button variant=\"contained\" color=\"secondary\" size=\"large\" className={classes.button}\r\n                    startIcon={<CloseIcon />}>Salir</Button>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport ReprintModule from './components/reprintModule/reprintModule';\r\nimport DischargeModule from './components/dischargeModule/dischargeModule';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/reprint/1509090912980128785211/ReimprimirTarjeta/DNI/10266305/BRINGIOTTI,%20MANUEL/Email/B/P/34/2/955/041/43275857/BANCA/Email/Email/4517610097274041\">Reimpresión Común de Tarjeta Banelco</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/reprint/1509090912980128785211/ReimprimirDiferida/DNI/10266305/BRINGIOTTI,%20MANUEL/Email/B/P/34/2/955/041/43275857/BANCA/Email/Email/4517610097274041\">Reimpresión Diferida de Tarjeta Banelco</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/discharge\">Baja de Tarjeta Banelco</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <Switch>\r\n          <Route path=\"/reprint/:operationId/:option/:documentType/:documentNumber/:businessName/:contactModeCode/:productCode/:causeCode/:reasonCode/:companyCode/:responsibleSector/:registerSector/:user/:origin/:initContact/:closeContact/:productNumber\" component={Reprint} />\r\n          <Route path=\"/discharge\">\r\n            <Discharge />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Reprint() {\r\n  return <ReprintModule></ReprintModule>;\r\n}\r\n\r\nfunction Discharge() {\r\n  return <DischargeModule></DischargeModule>;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App></App>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","const BaseService = {\r\n\r\n    URL() {\r\n        return 'https://gleaming-glass-313320.uc.r.appspot.com';\r\n    },\r\n\r\n    _call_get(url) {\r\n        return fetch(url)\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    _call_post(url, body) {\r\n        return fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(body)\r\n        })\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    getAlert(operationId, productCode, causeCode, reasonCode, companyCode) {\r\n        return this._call_get(this.URL() + '/transaccional/parametros/ayuda?operationId=' + operationId + '&productCode=' + productCode + '&causeCode=' + causeCode + '&reasonCode=' + reasonCode + '&companyCode=' + companyCode);\r\n    },\r\n\r\n    saveData(operationId, productCode, causeCode, companyCode, documentType, documentNumber, productNumber, origin,\r\n        user, option, contactMode, reasoncode, responsibleSector, registerSector, initContact, closeContact, embozo,\r\n        category, domicilio, sucursal) {\r\n\r\n        let body = {};\r\n        body.operationId = operationId;\r\n        body.documentType = documentType;\r\n        body.documentNumber = documentNumber;\r\n        body.productNumber = productNumber;\r\n        body.user = user;\r\n        body.origin = origin;\r\n        body.option = option;\r\n        body.contactMode = contactMode;\r\n        body.productCode = productCode;\r\n        body.causeCode = causeCode;\r\n        body.reasoncode = reasoncode;\r\n        body.companyCode = companyCode;\r\n        body.responsibleSector = responsibleSector;\r\n        body.registerSector = registerSector;\r\n        body.initContact = initContact;\r\n        body.closeContact = closeContact;\r\n        body.embozo = embozo;\r\n        body.category = category;\r\n        body.domicilio = domicilio;\r\n        body.sucursal = sucursal;\r\n        return this._call_post(this.URL() + '/transaccional/grabar', body);\r\n    }\r\n\r\n}\r\n\r\nexport default BaseService;","import BaseService from \"./baseService\";\r\n\r\nconst ReprintService = {\r\n\r\n    _call_get(url) {\r\n        return fetch(url)\r\n            .then(res => res.json())\r\n            .catch(err => console.log(err))\r\n    },\r\n\r\n    getEmbozos(operationId, code) {\r\n        return this._call_get(BaseService.URL() + '/reimpresion/tarjetas/embozos?operationId=' + operationId + '&codigo=' + code);\r\n    },\r\n\r\n    getCardDetails(operationId, cardNumber) {\r\n        return this._call_get(BaseService.URL() + '/reimpresion/tarjetas/detalle?operationId=' + operationId + '&numero=' + cardNumber);\r\n    },\r\n\r\n    getBranchDetails(operationId) {\r\n        return this._call_get(BaseService.URL() + '/transaccional/sucursales?operationId=' + operationId);\r\n    }\r\n\r\n}\r\n\r\nexport default ReprintService;"],"sourceRoot":""}